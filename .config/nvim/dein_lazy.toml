[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#auto_complete_delay = 0
    let g:deoplete#auto_complete_start_length = 1
    let g:deoplete#enable_camel_case = 0
    let g:deoplete#enable_ignore_case = 0
    let g:deoplete#enable_refresh_always = 0
    let g:deoplete#enable_smart_case = 1
    let g:deoplete#file#enable_buffer_path = 1
    let g:deoplete#max_list = 10000
    set completeopt-=preview
'''
hook_post_source = '''
    let g:deoplete#omni_patterns = {}
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c','cpp']
hook_source = '''
    let g:deoplete#sources#clang#libclang_path = '/usr/lib/libclang.so'
    let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_ft = ['python', 'sh']

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['python']
hook_source = '''
    let g:ale_enabled = 1
    let g:ale_sign_error = '⨉'
    let g:ale_sign_warning = '⚠'
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_sign_column_always = 1
    let g:ale_lint_on_enter = 1
    let g:ale_lint_on_save = 1
    let g:ale_lint_on_text_changed = 'never'
    let g:ale_set_loclist = 0
    let g:ale_set_quickfix = 0
    let g:ale_open_list = 0
    let g:ale_keep_list_window_open = 0
    let g:ale_statusline_format = ['%d Error', '%d Warn', 'OK']
    let g:ale_linters = {
    \    'python': ['flake8','pylint'],
    \}
    nmap <silent> [a <Plug>(ale_previous)
    nmap <silent> ]a <Plug>(ale_next)
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    nnoremap <Space>f :<C-u>NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = ['vim-fugitive']

